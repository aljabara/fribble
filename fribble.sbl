*   Copyright 2017, David Shields
*   Licensed under the MIT license.

-include "globals.sbl"
-include "find.sbl"
-include "lib.sbl"
-include "shell.sbl"
-include "show.sbl"
-include "util.sbl"

*	Play a game of fribble.  Usage:

*		sbl fribble.sbl -umode

*	where mode is 'auto', 'self' or 'team'.

*	The program can now run in several modes:

*	f.mode = 1 for move mode, where fribble reads tiles and state of board, and makes move.
*	f.mode = 2 for auto mode, where fribble moves for both players.
*	f.mode = 3 for solo mode, where you play against fribble.

	f.mode.move = 1
	f.mode.auto = 2
	f.mode.solo = 3

*	Fribble can also be invoked to run as a shell:

*		sbl fribble.sbl -ushell

*	The shell() procedure is called. It can be used to replay prior
*	games, study moves, make moves, test the system, and of course
*	learn more about Fribble.

*   &stlimit = -1

	&anchor = &trim = 1

	init()
	options = host(0) ' '

options.loop

	options break(' ') . opt ' ' =                         :f(options.loop.done)

*	Only process -u options.

	opt '-u' =                                             :f(options.loop)

	f.mode = ident(opt,'move') f.mode.move                 :s(options.loop)
	f.mode = ident(opt,'auto') f.mode.auto                 :s(options.loop)
	f.mode = ident(opt,'solo') f.mode.solo                 :s(options.loop)
	ident(opt,'shell')                                     :s(main.shell)

                                                        :(options.loop)
options.loop.done

	eq(f.mode,f.mode.move)                                 :s(main.move)
	eq(f.mode,f.mode.solo)                                 :s(main.solo)
	eq(f.mode,f.mode.auto)                                 :s(main.auto)

                                                        :(main.move);* default
main.auto

*	Setup for mode 'auto'.

*	In auto mode, fribble plays against itself.

*	Fribble makes the moves for both players,
*	each with kind player.kind.auto.

	g.one = player(1,'John Fribble',player.kind.auto)
	g.two = player(2,'Jane Fribble',player.kind.auto)

*	Fribble manages the tiles for both players.

	g.tilemanager = 1
                                                        :(main.done)

main.move

*	Setup for mode 'move'.

*	In solo mode, the tiles and state of board are read from standard input.

*	Fribble is player one, of kind player.kind.auto.
*	You are player two, of kind player.kind.solo.
*	You make your own moves.

	g.one = player(1,'Fribble',	player.kind.move)
	g.two = player(2,'You',		player.kind.solo)

*	Fribble manages the tiles for both players.

	g.tilemanager = 1
                                                        :(main.done)
main.solo

*	Setup for mode 'solo'.

*	In solo mode, you play against fribble.

*	Fribble is player one, of kind player.kind.auto.
*	You are player two, of kind player.kind.solo.
*	You make your own moves.

	g.one = player(1,'Fribble',	player.kind.auto)
	g.two = player(2,'You',		player.kind.solo)

*	Fribble manages the tiles for both players.

	g.tilemanager = 1
                                                        :(main.done)
main.shell
	shell()                                                :(end)

main.done

	g.players[1] = g.one; g.players[2] = g.two

*	out('g.one ' show.player(1))
*	out('g.two ' show.player(2))

	g.turn = g.lastmove = total(g.one) = total(g.two) = 0

*	Set f.trace to trace fribble.

	f.trace = 1
	f.trace = 0

	ident(g.tilemanager)                                   :s(main.game)

*	Program manages the tiles, so deal initial tiles.

	rack(g.one) = take(7)
	rack(g.two) = take(7)

main.game

	game(f.mode)

end
